name: CI and Deploy

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:24.0.2
        options: --privileged

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ⎔ Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      # - run: npm config set registry https://registry.npmmirror.com

      - name: 📦 Install dependencies
        run: npm ci --legacy-peer-deps

      - uses: nrwl/nx-set-shas@v4

      - name: 🔨 Test and build all apps
        run: npx nx affected -t lint test build

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      - name: 🐳 Set up Docker
        uses: docker/setup-buildx-action@v3

      # - name: ⬆️ Compose Up
      #   run: docker-compose up --build -d

      # - name: Wait for backend to start
      #   run: sleep 5

      # - name: 🧪 Run health test
      #   run: curl -f http://localhost:3000/ping || exit 1

      # - name: 🧹 Clean up containers
      #   if: always()
      #   run: docker-compose down

      - name: 🔐 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: 🔑 Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: 🧪 List Docker images for debugging
        run: docker images

      # not using dash but under score
      - name: 🐳 Build Docker image for backend
        run: |
          IMAGE_NAME=monorepo_backend
          AWS_ACCOUNT_ID=456048140117
          ECR_REGISTRY=${AWS_ACCOUNT_ID}.dkr.ecr.us-east-2.amazonaws.com
          docker build -t $ECR_REGISTRY/$IMAGE_NAME:latest -f apps/backend/Dockerfile .

      - name: 📤 Push to Amazon ECR
        run: |
          IMAGE_NAME=monorepo_backend
          AWS_ACCOUNT_ID=456048140117
          ECR_REGISTRY=${AWS_ACCOUNT_ID}.dkr.ecr.us-east-2.amazonaws.com
          docker push $ECR_REGISTRY/$IMAGE_NAME:latest
